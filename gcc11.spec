#
# This file is auto-generated. DO NOT EDIT
# Generated by: autospec.py
#
%define keepstatic 1
Name     : gcc11
Version  : 11.0
Release  : 1
URL      : file:///insilications/apps/gcc-11.0.tar.gz
Source0  : file:///insilications/apps/gcc-11.0.tar.gz
Summary  : zlib compression library
Group    : Development/Tools
License  : GPL-2.0 GPL-3.0 LGPL-2.1 bzip2-1.0.6
BuildRequires : Sphinx
BuildRequires : Z3-dev
BuildRequires : Z3-staticdev
BuildRequires : autoconf
BuildRequires : autogen
BuildRequires : binutils-dev
BuildRequires : binutils-extras
BuildRequires : bison
BuildRequires : buildreq-configure
BuildRequires : buildreq-golang
BuildRequires : dejagnu
BuildRequires : docbook-utils
BuildRequires : docbook-xml
BuildRequires : doxygen
BuildRequires : elfutils-dev
BuildRequires : expect
BuildRequires : flex
BuildRequires : gcc-dev
BuildRequires : gdb-dev
BuildRequires : gettext
BuildRequires : git
BuildRequires : glibc-dev
BuildRequires : glibc-staticdev
BuildRequires : gmp-dev
BuildRequires : gmp-staticdev
BuildRequires : graphviz
BuildRequires : grep
BuildRequires : guile
BuildRequires : libedit
BuildRequires : libedit-dev
BuildRequires : libffi-dev
BuildRequires : libffi-staticdev
BuildRequires : libstdc++
BuildRequires : libstdc++-dev
BuildRequires : libunwind-dev
BuildRequires : libxml2-dev
BuildRequires : libxml2-staticdev
BuildRequires : libxslt
BuildRequires : mpc-dev
BuildRequires : mpfr-dev
BuildRequires : nasm
BuildRequires : ncurses-dev
BuildRequires : pkgconfig(zlib)
BuildRequires : procps-ng
BuildRequires : python3-dev
BuildRequires : python3-staticdev
BuildRequires : sed
BuildRequires : tcl
BuildRequires : texinfo
BuildRequires : util-linux
BuildRequires : valgrind-dev
BuildRequires : xz-dev
BuildRequires : xz-staticdev
BuildRequires : yaml
BuildRequires : yaml-cpp
BuildRequires : zlib-dev
BuildRequires : zlib-staticdev
# Suppress stripping binaries
%define __strip /bin/true
%define debug_package %{nil}

%description
This directory contains the GNU Compiler Collection (GCC).
The GNU Compiler Collection is free software.  See the files whose
names start with COPYING for copying permission.  The manuals, and
some of the runtime libraries, are under different terms; see the
individual source files for details.

%prep
%setup -q -n gcc-11.0
cd %{_builddir}/gcc-11.0

%build
unset http_proxy
unset https_proxy
unset no_proxy
export SSL_CERT_FILE=/var/cache/ca-certs/anchors/ca-certificates.crt
export LANG=C.UTF-8
export SOURCE_DATE_EPOCH=1618139491
unset LD_AS_NEEDED
export GCC_IGNORE_WERROR=1
## altflags1 content
%global _lto_cflags %{nil}
export CCACHE_DISABLE=true
export PATH="/usr/lib64/ccache/bin:$PATH"
export CCACHE_NOHASHDIR=true
export CCACHE_CPP2=true
export CCACHE_SLOPPINESS=pch_defines,time_macros,locale,clang_index_store,file_macroexport CCACHE_DIR=/var/tmp/ccache
export CCACHE_BASEDIR=/builddir/build/BUILD
#
export V=1
export VERBOSE=1
#
unset ASFLAGS
unset LDFLAGS
unset CFLAGS
unset CXXFLAGS
unset FCFLAGS
unset FFLAGS
#
export CPATH=/usr/include
export LIBRARY_PATH=/usr/lib64
#
## altflags1 end
./configure --prefix=%{_prefix} \
--with-pkgversion='Clear Linux OS for Intel Architecture' \
--libdir=/usr/lib64 \
--enable-libstdcxx-pch \
--libexecdir=/usr/lib64 \
--with-system-zlib \
--enable-shared \
--enable-gnu-indirect-function \
--disable-vtable-verify \
--enable-threads=posix \
--enable-__cxa_atexit \
--enable-plugin \
--enable-ld=default \
--enable-clocale=gnu \
--disable-multiarch \
--disable-multilib \
--enable-lto \
--enable-linker-build-id \
--enable-languages="c,c++" \
--with-ppl=yes \
--with-isl \
--includedir=%{_includedir} \
--exec-prefix=%{_prefix} \
--with-system-libunwind \
--with-gnu-ld \
--with-gmp \
--with-tune=native \
--with-arch=native \
--enable-bootstrap \
--disable-cet \
--disable-libmpx \
--with-gcc-major-version-only \
--disable-default-pie \
--disable-werror \
--includedir=%{_includedir} \
--exec-prefix=%{_prefix} \
--with-system-zlib
V=1 VERBOSE=1 make -j12 profiledbootstrap
## ccache stats
ccache -s
## ccache stats


%install
export SOURCE_DATE_EPOCH=1618139491
rm -rf %{buildroot}
%make_install
## install_append content
mkdir -p %{buildroot}/usr/lib64/haswell
ln -sf %{buildroot}/usr/lib64/*so*  %{buildroot}/usr/lib64/haswell/

cd %{buildroot}/usr/bin
ln -sf x86_64-generic-linux-g++ g++
ln -sf %x86_64-generic-linux-gcc gcc
install -d %{buildroot}/usr/lib
ln -sf /usr/bin/cpp %{buildroot}/usr/lib/cpp
ln -sf g++ c++
ln -sf gcc cc
cd -

# This is only for gdb
mkdir -p %{buildroot}//usr/share/gdb/auto-load//usr/lib64
mkdir -p %{buildroot}//usr/share/gdb/auto-load//usr/lib32
mv %{buildroot}//usr/lib64/libstdc++.so.*-gdb.py %{buildroot}//usr/share/gdb/auto-load//usr/lib64/.
mv %{buildroot}//usr/lib32/libstdc++.so.*-gdb.py %{buildroot}//usr/share/gdb/auto-load//usr/lib32/.

# merge the two C++ include trees (needed for Clang)
pushd %{buildroot}/usr/include/c++/*/x86_64-generic-linux
find -type f \! -path ./32/\* | while read f; do
cmp -s $f 32/$f && continue
(
echo '#ifdef __LP64__'
cat $f
echo '#else'
cat 32/$f
echo '#endif'
) > rpm-tmp-hdr
mv rpm-tmp-hdr $f
done
for f in ./32/*; do
rm -rf $f
ln -s ../$(basename $f) $f
done
popd

# Also clang compat
(cd %{buildroot}/usr/lib64 && ln -s -t . gcc/x86_64-generic-linux/*/*.[ao])
(cd %{buildroot}/usr/lib32 && ln -s -t . ../lib64/gcc/x86_64-generic-linux/*/32/*.[ao])

%find_lang cpplib cpp.lang
%find_lang gcc tmp.lang
%find_lang libstdc++ cxx.lang
cat *.lang > gcc.lang
## install_append end

%files
%defattr(-,root,root,-)
